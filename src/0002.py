# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


def no_math_solution(n: int):
    """Calculate the sum of even fibonaccy number that less than n

    Args:
        n (int): max number

    Returns:
        int: sum
    """
    # After 2 (the second fibonacci number), every third number is even
    if(n < 2):
        return 0
    fibs = [2, 3, 5]
    sum = 0
    while(fibs[0] <= n):
        sum += fibs[0]
        fibs[0] = fibs[1] + fibs[2]
        fibs[1] = fibs[0] + fibs[2]
        fibs[2] = fibs[0] + fibs[1]
    return sum


def math_solution():
    pass


if __name__ == "__main__":
    # n = int(input())
    n = 4_000_000
    print(no_math_solution(n))
